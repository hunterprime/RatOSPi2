"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"crowsnest-v4-breaking-changes-manual-upgrade","metadata":{"permalink":"/blog/crowsnest-v4-breaking-changes-manual-upgrade","editUrl":"https://github.com/Rat-OS/RatOS/edit/v2.x/site/blog/2023-05-23-breaking-crowsnest-changes.mdx","source":"@site/blog/2023-05-23-breaking-crowsnest-changes.mdx","title":"Crowsnest v4 contains breaking changes and requires manual steps to upgrade.","description":"Crowsnest just recently made huge changes to the way it works. This is great news, because it should be much faster and more reliable. Unfortunately, it also means that there are major breaking changes, and you\'ll need to do some manual steps to upgrade. When you update to V4 through the machine tab in mainsail, crowsnest will stop working until you execute the following steps.","date":"2023-05-23T00:00:00.000Z","formattedDate":"May 23, 2023","tags":[{"label":"Crowsnest","permalink":"/blog/tags/crowsnest"},{"label":"Mainsail","permalink":"/blog/tags/mainsail"}],"readingTime":3.185,"hasTruncateMarker":false,"authors":[{"name":"Mikkel Schmidt","title":"Creator of RatOS","url":"https://github.com/miklschmidt","imageURL":"https://github.com/miklschmidt.png","key":"miklschmidt"}],"frontMatter":{"slug":"crowsnest-v4-breaking-changes-manual-upgrade","title":"Crowsnest v4 contains breaking changes and requires manual steps to upgrade.","authors":["miklschmidt"],"tags":["Crowsnest","Mainsail"]},"nextItem":{"title":"RatOS V2.0.0 Released!","permalink":"/blog/ratos-v2-0-0-released"}},"content":"Crowsnest just recently made huge changes to the way it works. This is great news, because it should be much faster and more reliable. Unfortunately, it also means that there are major breaking changes, and you\'ll need to do some manual steps to upgrade. When you update to V4 through the machine tab in mainsail, crowsnest will stop working until you execute the following steps.\\n\\nMake sure to read these instructions carefully before starting the process, so you don\'t miss anything. Just to be safe, download a copy of your crowsnest.conf.\\n\\n## Upgrading\\n\\n1. Update crowsnest in the machine tab in mainsail. If it\'s no longer there, skip this step.\\n2. Open a terminal window or command prompt (win + r, type cmd, hit enter) and ssh into your printer. The password is `raspberry` unless you changed it.\\n\\n```\\nssh pi@<your printer\'s hostname.local or ip address without the angle brackets>\\n```\\n\\n## Uninstall old crowsnest\\n\\n3. Run the following commands:\\n\\n```\\ncd crowsnest\\ngit pull\\ngit checkout legacy/v3\\nmake uninstall\\n```\\n\\n4. When asked `Do you REALLY want to remove existing \'crowsnest\'? (y/N)` delete the N and type \\"y\\" for \\"Yes\\", then hit enter.\\n\\n5. When asked `do you want to remove crowsnest.conf` answer \\"N\\" for \\"No\\".\\n\\n6. Ignore the instructions to remove the crowsnest folder.\\n7. Ignore the instructions to remove `[update manager crowsnest]` from moonraker.conf.\\n\\n## Reinstall crowsnest\\n\\n8. This next part will take a while, and you\'ll have to answer a couple of questions along the way.\\n\\n```\\ngit checkout master\\nsudo make install\\n```\\n\\n9. When asked `Do you want to add \'update manager\' entry to your moonraker.conf?` answer \\"N\\" for \\"No\\".\\n\\n10. Ignore the instructions to add the crowsnest update manager entry manually (it\'s already there).\\n\\n11. When asked to reboot, answer \\"Y\\" for \\"Yes\\".\\n\\n12. After rebooting, go to the Machine tab in mainsail and edit crowsnest.conf. Enter your old settings from the file you downloaded, alternatively crowsnest should have created a backup file called crowsnest.conf.date-of-backup.\\n\\n13. (Skip if not using a Raspberry Pi) In crowsnest.conf change `mode` to `camera-streamer`.\\n14. (Skip if not using a Raspberry Pi) Back in mainsail, edit your web camera settings and make sure the \\"Camera Streamer\\" option is selected.\\n15. (Skip if not using a Raspberry Pi) Change `URL Stream` to `webcam/webrtc`\\n    ![Camera Stream option enabled](./_media/camera-stream-option.png)\\n\\nYou\'re now using Crowsnest v4, which should have much better performance.\\n\\nThanks to tomlawesome for the image!\\n\\n## Making legacy CSI cameras work again (for example the raspberry pi cameras v1 or v2)\\n\\nIf you\'re using an older raspberry pi camera and it stopped working, you\'ll need to do some additional steps to make it work again.\\n\\n1. Disable legacy camera support by running `sudo raspi-config` and selecting `3 Interface Options` -> `I1 Legacy Camera` -> `No`. Finally press escape to get out of raspi-config.\\n1. Edit /boot/config.txt by running `sudo nano /boot/config.txt`. Find the [all] section at the bottom. Depending on which camera you have, you\'ll need to add a `dtoverlay` set statement at the end of the [all] section. Here\'s a list of sensors and the corresponding set statements. Look up your particular camera to find out which sensor it uses.\\n\\n| Model         | Set Statement                              | Known Cameras with this sensor |\\n| ------------- | ------------------------------------------ | ------------------------------ |\\n| OV5647        | dtoverlay=ov5647                           | Raspberry Pi Camera Module V1  |\\n| OV9281        | dtoverlay=ov9281                           | ?                              |\\n| IMX290/IMX327 | dtoverlay=imx290, clock-frequency=37125000 | ?                              |\\n| IMX378        | dtoverlay=imx378                           | ?                              |\\n| IMX219        | dtoverlay=imx219                           | Raspberry Pi Camera Module V2  |\\n| IMX477        | dtoverlay=imx477                           | Raspberry Pi HQ Camera         |\\n\\n2. reboot with `sudo reboot`\\n3. reconnect to your printer with ssh\\n4. `libcamera-hello --list-cameras` should return something like this:\\n   ![libcamera-hello output](./_media/picam.png)\\n5. in this example `/base/soc/i2c0mux/i2c@1/ov5647@36` is the new device for crowsnest.conf"},{"id":"ratos-v2-0-0-released","metadata":{"permalink":"/blog/ratos-v2-0-0-released","editUrl":"https://github.com/Rat-OS/RatOS/edit/v2.x/site/blog/2023-03-04-ratos-v2-0-0-released.mdx","source":"@site/blog/2023-03-04-ratos-v2-0-0-released.mdx","title":"RatOS V2.0.0 Released!","description":"RatOS V2.0.0 is now released!","date":"2023-03-04T00:00:00.000Z","formattedDate":"March 4, 2023","tags":[{"label":"RatOS","permalink":"/blog/tags/rat-os"},{"label":"Releases","permalink":"/blog/tags/releases"}],"readingTime":3.17,"hasTruncateMarker":false,"authors":[{"name":"Mikkel Schmidt","title":"Creator of RatOS","url":"https://github.com/miklschmidt","imageURL":"https://github.com/miklschmidt.png","key":"miklschmidt"}],"frontMatter":{"slug":"ratos-v2-0-0-released","title":"RatOS V2.0.0 Released!","authors":["miklschmidt"],"tags":["RatOS","Releases"]},"prevItem":{"title":"Crowsnest v4 contains breaking changes and requires manual steps to upgrade.","permalink":"/blog/crowsnest-v4-breaking-changes-manual-upgrade"},"nextItem":{"title":"No, you don\'t want to use CAN","permalink":"/blog/no-you-dont-want-to-use-can"}},"content":"## RatOS V2.0.0 is now released!\\n\\n![RatOS](/img/logos/Logo-white.svg)\\n\\nThis is a huge milestone and I\'m very excited to finally release RatOS V2.0.0!\\n\\nThere\'s been quite a few changes since the last release, so I\'ll quickly go over the most notable ones, feel free to check out the [changelog](https://os.ratrig.com/changelog#ratos-v20) for the complete picture!\\n\\n### Toolboards\\n\\nYou asked for it, and now it\'s finally here! Toolboards are now supported! There are currently 8 supported models to choose from, and more are on the way. The supported toolboards can be used with any of the control boards and any supported printer. As of the time of writing, RatOS currently supports the following toolboards:\\n\\n-   BTT EBB42 v1.0\\n-   BTT EBB42 v1.1\\n-   BTT EBB42 v1.2\\n-   BTT EBB36 v1.0\\n-   BTT EBB36 v1.1\\n-   BTT EBB36 v1.2\\n-   Mellow Fly SHT42 v1\\n-   Mellow Fly SHT36 v1\\n\\n### Speaking of printers!\\n\\nThanks to our awesome contributors, RatOS now supports 7 different printers! v2.0.0 adds experimental support for the following:\\n\\n-   Voron V2.4 (Thanks to Heisenberg19x#4580)\\n-   Voron V0.1 (Thanks to Heisenberg19x#4580)\\n-   Prusa i3 MK3S (Thanks to cloudhd3d#6175)\\n-   Prusa Mini (Thanks to cloudhd3d#6175)\\n\\nThese printers are still in the experimental phase, and we\'re looking for more contributors to help us test and improve them. If you\'re interested in helping out, please join our [Discord](https://discord.gg/ratrig) and let us know!\\n\\n### Experimental BTT CB1 support\\n\\nThanks to the awesome work of blacksmithforlife#6070 we now have experimental support for the BTT CB1, this should be great news to those of you who are having trouble sourcing Raspberry Pi\'s. It\'s an ongoing process, and the CB1 itself is still maturing, but please give it a try and let us know how it goes!\\n\\n### Control boards\\n\\nThe control boards have also gotten a lot of love in this release. RatOS now additionally supports the following boards:\\n\\n-   BTT Manta M8P\\n-   BTT Manta M4P\\n-   BTT Manta E3EZ\\n-   BTT SKR 3\\n-   BTT SKR 3 EZ\\n-   BTT SKR Mini E3 3.0\\n-   BTT SKRat 1.0\\n-   BTT Octopus Pro H723\\n\\nThanks to everyone who helped test the configurations and wiring diagrams!\\n\\n### Stowable probes\\n\\nBy popular request, stowable probes like euclid and klicky are now supported natively in RatOS (currently only on CoreXY). As usual everything you need is a single include and possibly some minor tweaking to 4 coordinates, quite a stark contrast to the work usually involved in configuring stowable probes. The probes are automatically stowed and deployed when needed and safeguards are in place to ensure safe operations.\\n\\n### Simplified installation\\n\\nThe configurator has gotten smarter and now knows how to flash your control boards and toolboards, check their versions and keep them up to date. This takes a lot of guess work out of the flashing process and makes it much easier to get started. This is a huge step towards making RatOS more user friendly while remaining modular and flexible, and it\'s only the beginning. As you might now, the goal is for the entire setup process - including configuration - to be done through the configurator interface in 3.0. This brings us one step closer to that goal.\\n\\n### Onwards and upwards!\\n\\nRatOS has come a long way in the last year, and 2.0.0 brings us even closer to reaching the goal of a more accessible Klipper that doesn\'t require a computer science degree. We\'re not done yet, and i\'m personally looking forward to the next major release, which i think is going to be really special. Onwards and upwards!\\n\\n### THANK YOU for your support\\n\\nThank you to everyone who donated, contributed, helped me test and suggest changes and improvements, it is much appreciated!\\nIf you wish to support the development of RatOS, please consider [donating](https://paypal.me/miklschmidt) or [becoming a sponsor](https://github.com/sponsors/miklschmidt), thank you!"},{"id":"no-you-dont-want-to-use-can","metadata":{"permalink":"/blog/no-you-dont-want-to-use-can","editUrl":"https://github.com/Rat-OS/RatOS/edit/v2.x/site/blog/2022-11-08-no-you-dont-want-to-use-can.mdx","source":"@site/blog/2022-11-08-no-you-dont-want-to-use-can.mdx","title":"No, you don\'t want to use CAN","description":"No, you don\'t want to use CAN.","date":"2022-11-08T00:00:00.000Z","formattedDate":"November 8, 2022","tags":[{"label":"RatOS","permalink":"/blog/tags/rat-os"},{"label":"CAN","permalink":"/blog/tags/can"},{"label":"USB","permalink":"/blog/tags/usb"},{"label":"Klipper","permalink":"/blog/tags/klipper"},{"label":"Rant","permalink":"/blog/tags/rant"}],"readingTime":3.295,"hasTruncateMarker":false,"authors":[{"name":"Mikkel Schmidt","title":"Creator of RatOS","url":"https://github.com/miklschmidt","imageURL":"https://github.com/miklschmidt.png","key":"miklschmidt"}],"frontMatter":{"slug":"no-you-dont-want-to-use-can","title":"No, you don\'t want to use CAN","authors":["miklschmidt"],"tags":["RatOS","CAN","USB","Klipper","Rant"]},"prevItem":{"title":"RatOS V2.0.0 Released!","permalink":"/blog/ratos-v2-0-0-released"},"nextItem":{"title":"Moonraker is now safe to update","permalink":"/blog/moonraker-config-changes"}},"content":"## No, you don\'t want to use CAN.\\n\\nFor some reason, the entire 3d printing community has convinced itself that it needs to use CAN bus connections for everything. I\'m here to tell you why that\'s a waste of your time when running klipper.\\n\\n## What is CAN bus?\\n\\nCAN bus is a multi-master protocol in which any device can initiate a message to any other on embedded systems where every device is known and there are no strangers. It can work over long distances and is less susceptible to noise than USB.\\nCAN bus is also the opposite of plug and play, requiring configuration for each device and setup. It\'s also not very fast, and requires a lot of overhead to work. It was developed for use in vehicles, where redundancy is critical.\\n\\nThe strengths of CAN boil down to:\\n\\n-   Redundancy\\n-   Noise tolerance\\n-   Long distance\\n-   4 wires (power and data).\\n\\n## What is USB?\\n\\nUSB is a strict master/slave protocol, where unknown devices can be connected to a host which controls them. It was made so you grandmother can plug in a keyboard without knowing the intricacy of serial communications, device mapping and drivers. USB is fast, has ultra low latency but works best over short distances.\\n\\nThe strengths of USB boil down to:\\n\\n-   Plug and play\\n-   Low latency\\n-   High throughput\\n-   Low overhead.\\n-   3 wires (usb cable and power)\\n\\n## Why CAN has no benefits over USB for 3d printers running klipper.\\n\\nKlippy (the klipper brain that runs on your raspberry pi) is in charge of everything going on in your 3d printer. It\'s the master. Your control boards are slaves, they do what they\'re told by Klippy. Latency is critical for homing and nobody likes additional overhead.\\nWe have 4 USB ports (and you can add more via hubs) on a standard raspberry pi, that means you can connect a virtually unlimited amount of boards to your printer.\\n\\n### But Mikkel, USB cables are so fragile?\\n\\nNo. Good modern USB cables are made to take years of abuse from teenagers plugging and unplugging their phone, dogs chewing on them, heck some of them can even be used to [pull cars and lift weights](https://www.indiegogo.com/projects/zus-super-duty-charging-cable-lifetime-guarantee/). The bend radius that are tested are far tighter than what you\'d ever use in a 3d printer. Durability is really not a concern, and even if your cable breaks, a new one is cheap and takes seconds to swap. Get a good braided USB cable and it will outlast the rest of your wiring.\\n\\n### But Mikkel, USB cables are super susceptible to noise!\\n\\nAlso no. If you use a modern 3.1 or better spec USB cable they come with heavy shielding and have no issues operating inside your 3d printer. You\'re not running 10 meters of cable here, even on a V-Core 500, you won\'t need much more than 1.5 meters. It\'s a non issue.\\n\\n### But what about redundancy?\\n\\nCAN redundancy is wasted on klipper, your raspberry pi is the single point of failure anyway, so it literally doesn\'t matter if you connect a bunch of can devices together and then to the pi or you connect a bunch of devices via USB directly to the pi. If the pi dies, everything dies, CAN or no CAN.\\n\\n### But Mikkel, CAN is so much more reliable!\\n\\nIs it? Your control board has run on USB for ever. It\'s been tested and proven to work. It works just as well for toolboards too.\\n\\nNone of the benefits CAN brings are relevant to 3d printing. You\'re wasting your time trying to get it to work, when you could just plug in a USB cable and be on your way.\\n\\nCAN is slower, has higher latency, uses more system resources, requires more configuration and is more expensive to implement, and you benefit from none of it.\\n\\nStop worrying about CAN, and save yourself the headache!"},{"id":"moonraker-config-changes","metadata":{"permalink":"/blog/moonraker-config-changes","editUrl":"https://github.com/Rat-OS/RatOS/edit/v2.x/site/blog/2022-10-17-moonraker-config-changes.mdx","source":"@site/blog/2022-10-17-moonraker-config-changes.mdx","title":"Moonraker is now safe to update","description":"Major moonraker config and file changes","date":"2022-10-17T00:00:00.000Z","formattedDate":"October 17, 2022","tags":[{"label":"RatOS","permalink":"/blog/tags/rat-os"},{"label":"Moonraker","permalink":"/blog/tags/moonraker"}],"readingTime":1.405,"hasTruncateMarker":false,"authors":[{"name":"Mikkel Schmidt","title":"Creator of RatOS","url":"https://github.com/miklschmidt","imageURL":"https://github.com/miklschmidt.png","key":"miklschmidt"}],"frontMatter":{"slug":"moonraker-config-changes","title":"Moonraker is now safe to update","authors":["miklschmidt"],"tags":["RatOS","Moonraker"]},"prevItem":{"title":"No, you don\'t want to use CAN","permalink":"/blog/no-you-dont-want-to-use-can"},"nextItem":{"title":"RatOS V1.1 Released!","permalink":"/blog/ratos-v1-1-released"}},"content":"## Major moonraker config and file changes\\n\\nAs you might know, a couple of weeks ago, I issued a warning about updating moonraker due to a major change that involved file restructuring, config changes and deprecations. I now believe i\'ve ironed out all the kinks, and I can now say that the update is safe to do, as long as you update RatOS first, as usual.\\n\\n**There are a few things to note about this update:**\\n\\nUsers who installed RatOS before 1.2.1 have an unmanaged moonraker config, this means that it\'s up to the user to manage it and RatOS can\'t correct it when things need updating. Fear not though, as most of this is automated by moonraker itself. When you update moonraker, make sure to keep an eye on the notifications in the topmenu, there\'s a chance you might have to follow the instructions in there to finish the config validation. If you\'re asked to enter a sudo password, the default is `raspberry`.\\n\\n## Checking if your moonraker config is managed\\n\\nTo check if you have a managed config (and thus don\'t need to do anything besides clicking the update buttons), you can look in your moonraker.conf for `[include config/moonraker.conf]`, if that is present, you have a managed moonraker config. If it\'s not, you have an unmanaged config, and you\'ll have to follow the instructions in the notification, if any is present.\\n\\n## Missing files after update\\n\\nIf you\'re missing files after updating (can happen if you do things out of order), you can run the following macro to restore them: `DELETE_AND_RESTORE_PRINTER_DATA_DIRS`. Restart moonraker and reload mainsail after running the macro.\\n\\nThank you for bearing with me, and happy printing!"},{"id":"ratos-v1-1-released","metadata":{"permalink":"/blog/ratos-v1-1-released","editUrl":"https://github.com/Rat-OS/RatOS/edit/v2.x/site/blog/2022-01-08-ratos-v1-1-released.mdx","source":"@site/blog/2022-01-08-ratos-v1-1-released.mdx","title":"RatOS V1.1 Released!","description":"RatOS V1.1 is now released!","date":"2022-01-08T00:00:00.000Z","formattedDate":"January 8, 2022","tags":[{"label":"RatOS","permalink":"/blog/tags/rat-os"},{"label":"Releases","permalink":"/blog/tags/releases"}],"readingTime":1.445,"hasTruncateMarker":false,"authors":[{"name":"Mikkel Schmidt","title":"Creator of RatOS","url":"https://github.com/miklschmidt","imageURL":"https://github.com/miklschmidt.png","key":"miklschmidt"}],"frontMatter":{"slug":"ratos-v1-1-released","title":"RatOS V1.1 Released!","authors":["miklschmidt"],"tags":["RatOS","Releases"]},"prevItem":{"title":"Moonraker is now safe to update","permalink":"/blog/moonraker-config-changes"},"nextItem":{"title":"RatOS V1.0 Released!","permalink":"/blog/ratos-v1-0-released"}},"content":"## RatOS V1.1 is now released!\\n\\n![RatOS](/img/logos/Type.png)\\n\\nAs some of you may have noticed, RatOS v1.1 has been released this week, bringing new templates, new modular driver and stepper definitions and\\nsupport for new extruders and hotends. This release also contains an updated V-Minion template that will run out of the box with the just released [V-Minion full kits](https://www.ratrig.com/v-minion.html) that will start shipping soon.\\n\\n### Changes to stepper motors and driver settings.\\n\\nThis release mainly revolves around the new stepper/stepper driver setting recommendations from Klipper. `Hold_current` has been removed, stealthchop is now entirely disabled by default, interpolation has been disabled and microsteps have been increased to 64 to counteract the additional noise. This increases precision and you may see an increase in print quality.\\nThis change comes with the side effect of increased \\"R2D2 noise\\", tuned driver settings for the most used steppers have been included to combat this, but they will never be as silent in standstill as with stealthchop_threshold: 1. If you want a quieter printer refer to the \\"stealth mode\\" includes in the new printer templates, this will turn on stealthchop and limit print velocity at the cost of significantly reduced torque and precision.\\nA nice consequence of this change is that it made it easier to make drivers and steppers more modular, it\'s now much easier to run high voltage steppers on some stepper slots, read more in the [Advanced Stepper Configuration](/docs/configuration/advanced-stepper-configuration) guide.\\n\\n### Updating from RatOS v1.0\\n\\nV1.1 is backwards compatible, but there are still a couple of things you might want to do, read more in the [Update Guide](/changelog#updating-from-ratos-v10).\\n\\n### THANK YOU for your support\\n\\nThank you to everyone who donated, helped me test and suggest changes and improvements, it is much appreciated!"},{"id":"ratos-v1-0-released","metadata":{"permalink":"/blog/ratos-v1-0-released","editUrl":"https://github.com/Rat-OS/RatOS/edit/v2.x/site/blog/2021-11-14-ratos-v1-0-released.mdx","source":"@site/blog/2021-11-14-ratos-v1-0-released.mdx","title":"RatOS V1.0 Released!","description":"RatOS V1.0 is here!","date":"2021-11-14T00:00:00.000Z","formattedDate":"November 14, 2021","tags":[{"label":"RatOS","permalink":"/blog/tags/rat-os"},{"label":"Releases","permalink":"/blog/tags/releases"}],"readingTime":2.31,"hasTruncateMarker":false,"authors":[{"name":"Mikkel Schmidt","title":"Creator of RatOS","url":"https://github.com/miklschmidt","imageURL":"https://github.com/miklschmidt.png","key":"miklschmidt"}],"frontMatter":{"slug":"ratos-v1-0-released","title":"RatOS V1.0 Released!","authors":["miklschmidt"],"tags":["RatOS","Releases"]},"prevItem":{"title":"RatOS V1.1 Released!","permalink":"/blog/ratos-v1-1-released"}},"content":"## RatOS V1.0 is here!\\n\\n![RatOS](/img/logos/Logo-white.svg)\\n\\nRatOS V1.0 is finally released, it\'s been a long road to get here, thank you everyone who has been testing and supporting me get this release completed.\\nThere\'s a lot of new exciting features that i\'m dying to share with you all.\\n\\n### Mainsail is here!\\n\\nRatOS now ships with Mainsail as the default UI. The Mainsail team has been teasing a lot of awesome features lately and now RatOS users get them too.\\n\\n### Automated firmware updates\\n\\nThat\'s right. RatOS will now flash your board for you everytime klipper is updated.\\nThis has been a high priority for me, since much of my time has been spent answering questions about the infamous version mismatch error.\\nIt hasn\'t been very clear to beginners, what they need to do to get things working again, after having updated klipper and getting presented with an error.\\nThis is now a thing of the past!\\n\\nUnfortunately there\'s an exception for the Octopus Pro 429, since there\'s currently no way to flash that board automatically.\\nRead more about that in the [Octopus Pro 429 Board Documentation](/docs/boards/btt/octopus-pro-429#firmware-installation)\\n\\n### RPi as additional MCU.\\n\\nAutomated firmware updates made it possible to add the RPi as an additional mcu, it\'s now preconfigured and automatically updated, so you can use\\nit for additional GPIO\'s, ADXL345 or other sensors if you need to. This also opens up for using dual ADXL345\'s on bed slingers.\\n\\n### More powerful macros\\n\\nRatOS now ships with the gcode_shell_command.py klipper extension, this allows for macros to compile binaries, pick your printer configuration, generate input shaper graphs and more without you ever having to SSH into your pi. It\'s been the primary design principle of RatOS from the start that running klipper on your printer should not require knowledge of SSH or Linux, so this is another step in the right direction!\\n\\n### More flexible macros\\n\\nWe\'ve added a bunch of parameters you can configure for changing the behavior of the built-in RatOS macro\'s, want your START_PRINT to skip the bed mesh calibration? No problem. Want the carriage to park in the front during pauses? Easy! How about starting your print with a primeline? You\'ve got it! Read more in the [Macro Configuration documentation](/docs/configuration/macros)\\n\\n### Updating from V-CoreOS RC 2\\n\\nIf you\'re using V-CoreOS RC 2, take a look at the [Update Guide](/changelog#updating-from-v-coreos-rc2) for a smooth transition.\\n\\n### THANK YOU for your support\\n\\nThe amount of support and encouragement i\'ve recieved from the community has been heartwarming, and totally makes the long nights worth it!\\nThank you for helping and thank you for using RatOS!\\n\\nIf you wish to donate towards a new spool of filament or a cup of coffee you can do so here: [github.com/sponsors/miklschmidt](https://github.com/sponsors/miklschmidt) or [paypal.me/miklschmidt](https://paypal.me/miklschmidt). Thank you very much!"}]}')}}]);